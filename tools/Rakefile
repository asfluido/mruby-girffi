require "fileutils"
mrbc = ENV["MRBC_PATH"]

begin
  MRBC = File.exist?(mrbc) ? mrbc : "/usr/bin/mrbc"
rescue
  MRBC = "/usr/bin/mrbc"
end

raise "No mrbc found (expect at /usr/bin/mrbc or ENV['MRBC_PATH']" unless File.exist?(MRBC)

desc "build the library to extend implementation of gobject"
task :gobject do
  FileUtils.mkdir_p "../build/requires" unless File.exist?("../build/requires")

  cmds = ["#{MRBC} -B#{symn="libmruby_girffi_gobject_extra"} #{pth="../ext/requires/gobject/"}gobject.rb",
  "gcc -c #{pth}gobject.c -o #{pth}gobject.o",
  "gcc -shared #{pth}gobject.o -o #{so="#{pth}#{symn}.so"}",
  "cp #{so} ../build/requires/"]
  
  cmds.each do |c|
    puts c
    raise unless system c
  end
end

desc "build the library to extend implementation of glib"
task :glib do
  FileUtils.mkdir_p "../build/requires" unless File.exist?("../build/requires")

  cmds = ["#{MRBC} -B#{symn="libmruby_girffi_glib_extra"} #{pth="../ext/requires/glib/"}glib.rb",
  "gcc -c #{pth}glib.c -o #{pth}glib.o",
  "gcc -shared #{pth}glib.o -o #{so="#{pth}#{symn}.so"}",
  "cp #{so} ../build/requires/"]
  
  cmds.each do |c|
    puts c
    raise unless system c
  end
end

desc "build all extras"
task :default => [:glib,:gobject] do
  puts "Ok"
end